services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d postgres -U postgres']
      interval: 10s
      timeout: 5s
      retries: 20
  server:
    build: ./backend
    environment:
      WATCHPACK_POLLING: 'true'
      CHOKIDAR_USEPOLLING: 'true'
    ports:
      - 4000:4000
    command: npm start
    volumes:
      - ./backend/src/:/app/src/
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      db:
        condition: service_healthy
  client:
    build: ./frontend
    environment:
      WATCHPACK_POLLING: 'true'
      CHOKIDAR_USEPOLLING: 'true'
    ports:
      - 3000:3000
    command: npm run dev
    volumes:
      - ./frontend/src/:/app/src/
    depends_on:
      server:
        condition: service_healthy
  images:
    build: ./images
    environment:
      WATCHPACK_POLLING: 'true'
      CHOKIDAR_USEPOLLING: 'true'
    ports:
      - 8000:8000
    command: npm start
    volumes:
      - ./images/src/:/app/src/
      - ./images/uploads/:/app/uploads/
